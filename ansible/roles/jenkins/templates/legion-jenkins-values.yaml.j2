rootDomain: {{ base_domain }}
clusterName: {{ cluster_name }}
namespace: default
localDomain: "cluster.local"
addLocalDomain: true
cluster_prefix: "{{ env_name }}"

{% if dex.enabled == true %}
auth:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
        set_escape_uri $escaped_request_uri $request_uri;
    nginx.ingress.kubernetes.io/auth-signin: https://auth.{{ cluster_name }}/oauth2/start?rd=https://$host$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-url: http://oauth2-proxy.kube-system.svc.cluster.local:4180/oauth2/auth
{% endif %}

package:
  version: "{{ legion_version }}"
  repository: "{{ pypi_repo }}"
  baseImage:
    repository: "{{ docker_repo }}/python-toolchain"
    tag: "{{ legion_version }}"
  edi_image: "{{ docker_repo }}/k8s-edi:{{ legion_version }}"

metrics:
  enabled: true
  host: statsd-exporter.{{ monitoring_namespace }}.svc.cluster.local
  port: 9125

jenkins:
  enabled: true
  persistence:
    storageClass: "gp2"
    size: {{ jenkins_volume_size | default('20') }}Gi

  image:
    repository: "{{ docker_repo }}/k8s-jenkins"
    tag: "{{ legion_jenkins_version }}"

  git_secret_name: "{{ git_secret_name }}"

  ingress:
    tls:
      enabled: true

  openId:
    enable: {{ dex.enabled | default(false) | bool }}
    clientId: {{ dex.config.client_id | default("~") }}
    clientSecret: {{ dex.config.client_secret | default("~") }}
    tokenServerUrl: https://dex.{{ cluster_name }}/token
    authServerUrl: https://dex.{{ cluster_name }}/auth
    adminGroups: "
    {%- for item in dex.groups_binding.kubernetes -%}
    {%- if item.clusterrolebinding == "cluster-admin" %} {{ item.name }}
    {%- endif -%}
    {% endfor %}
    {%- for item in dex.groups_binding.jenkins -%}
    {%- if item.role == "admin" %} {{ item.name }}
    {%- endif -%}
    {% endfor %}"
    readOnlyGroups: "
    {%- for item in dex.groups_binding.kubernetes -%}
    {%- if item.clusterrolebinding == "view" %} {{ item.name }}
    {%- endif -%}
    {% endfor %}
    {%- for item in dex.groups_binding.jenkins -%}
    {%- if item.role == "view" %} {{ item.name }}
    {%- endif -%}
    {% endfor %}"

connections:
  docker:
    type: proxy
    url: "{{ model_docker_url }}"
    user: "{{ docker.user }}"
    password: "{{ docker.password }}"
